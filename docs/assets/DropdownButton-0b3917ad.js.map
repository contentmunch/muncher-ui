{"version":3,"file":"DropdownButton-0b3917ad.js","sources":["../../src/components/button/DropdownButton.tsx"],"sourcesContent":["import React, {useCallback, useEffect, useRef} from 'react';\nimport './assets/DropdownButton.scss';\nimport {Button, ButtonProps} from \"./Button\";\n\nexport const DropdownButton: React.FC<DropdownButtonProps> = (\n    {\n        variant, size, title, active,\n        disabled, element, onMouseDown,\n        rounded, drop, onClick, onClose,\n        showContent, setShowContent, withDropIcon, children, ...props\n    }) => {\n\n    const dropDownRef = useRef<HTMLDivElement>(null);\n    const handleMouseDown = (e: React.MouseEvent<HTMLButtonElement>) => {\n        e.preventDefault();\n        if (onClick) onClick(e);\n        if (setShowContent) setShowContent(true);\n\n    }\n\n    const handleContentClose = useCallback(() => {\n        setShowContent(false);\n        if (onClose) onClose();\n\n    }, [onClose, setShowContent]);\n    const escFunction = useCallback((event: any) => {\n        if (event.keyCode === 27) handleContentClose();\n    }, [handleContentClose]);\n\n\n    useEffect(() => {\n        const handleClickOutside = (event: MouseEvent) => {\n            if (dropDownRef && dropDownRef.current) {\n                if (event.target instanceof HTMLElement && !dropDownRef.current.contains(event.target)) {\n                    handleContentClose();\n                }\n            }\n        };\n        document.addEventListener(\"keydown\", escFunction, false);\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"keydown\", escFunction, false);\n        };\n    }, [escFunction, handleContentClose]);\n    const dropdownClass = () => {\n\n        const offsetLeft = dropDownRef.current?.offsetLeft;\n\n        const windowWidth = window.innerWidth;\n        if (offsetLeft) {\n            if (offsetLeft < 100) return \"muncher-dropdown--content\";\n            if (windowWidth - offsetLeft < 150) return \"muncher-dropdown--content drop-left\";\n            if (windowWidth - offsetLeft < 250) {\n                const offsetPercent = Math.round((windowWidth - offsetLeft) / windowWidth * 100);\n                if (offsetPercent > 40 || offsetPercent < 60) return \"muncher-dropdown--content drop-middle\";\n            }\n        }\n\n        switch (drop) {\n            case \"left\":\n                return \"muncher-dropdown--content drop-left\";\n            case \"middle\":\n                return \"muncher-dropdown--content drop-middle\";\n            default:\n                return \"muncher-dropdown--content\";\n        }\n    };\n\n    return (\n        <div className=\"muncher-dropdown\" ref={dropDownRef}>\n            <Button onMouseDown={handleMouseDown} title={title}\n                    disabled={disabled} rounded={rounded}\n                    active={active} variant={variant} size={size} {...props}\n            >{element}{withDropIcon ? <span\n                className=\"small\">â–¼</span> : \"\"}</Button>\n            {\n                showContent ? <div className={dropdownClass()}>\n                    {children}\n                </div> : \"\"\n            }\n        </div>\n    );\n};\n\nDropdownButton.defaultProps = {\n    size: 'medium',\n};\n\nexport interface DropdownButtonProps extends ButtonProps {\n    /**\n     * base on drop value, it will either drop left or right\n     */\n    drop?: 'left' | 'right' | 'middle';\n    /**\n     * shows or hides drop down content\n     */\n    showContent: boolean;\n    /**\n     * event to set show content value\n     */\n    setShowContent: (show: boolean) => void;\n\n    /**\n     * button mouse down handler\n     */\n    onClose?: () => void;\n    element: React.ReactNode;\n    withDropIcon?: boolean;\n\n}\n"],"names":["DropdownButton","variant","size","title","active","disabled","element","onMouseDown","rounded","drop","onClick","onClose","showContent","setShowContent","withDropIcon","children","props","dropDownRef","useRef","handleMouseDown","handleContentClose","useCallback","escFunction","event","useEffect","handleClickOutside","dropdownClass","offsetLeft","_a","windowWidth","offsetPercent","jsxs","Button","jsx"],"mappings":"0HAIO,MAAAA,EAAA,CAAA,CACH,QAAAC,EACI,KAAAC,EAAS,MAAAC,EAAM,OAAAC,EAAO,SAAAC,EACtB,QAAAC,EAAU,YAAAC,EAAS,QAAAC,EACnB,KAAAC,EAAS,QAAAC,EAAM,QAAAC,EAAS,YAAAC,EACxB,eAAAC,EAAa,aAAAC,EAAgB,SAAAC,EAAc,GAAAC,CAC/C,IAAA,CAEA,MAAAC,EAAAC,SAAA,IAAA,EACAC,EAAA,GAAA,CACI,EAAA,eAAA,EACAT,GAAaA,EAAA,CAAA,EACbG,GAAoBA,EAAA,EAAA,CAAmB,EAI3CO,EAAAC,EAAAA,YAAA,IAAA,CACIR,EAAA,EAAA,EACAF,GAAaA,GAAQ,EAAA,CAAAA,EAAAE,CAAA,CAAA,EAGzBS,EAAAD,cAAAE,GAAA,CACIA,EAAA,UAAA,IAA0BH,GAAmB,EAAA,CAAAA,CAAA,CAAA,EAIjDI,EAAAA,UAAA,IAAA,CACI,MAAAC,EAAAF,GAAA,CACIN,GAAAA,EAAA,SACIM,EAAA,kBAAA,aAAA,CAAAN,EAAA,QAAA,SAAAM,EAAA,MAAA,GACIH,GAER,EAEJ,gBAAA,iBAAA,UAAAE,EAAA,EAAA,EACA,SAAA,iBAAA,YAAAG,CAAA,EACA,IAAA,CACI,SAAA,oBAAA,UAAAH,EAAA,EAAA,CAA0D,CAC9D,EAAA,CAAAA,EAAAF,CAAA,CAAA,EAEJ,MAAAM,EAAA,IAAA,OAEI,MAAAC,GAAAC,EAAAX,EAAA,UAAA,YAAAW,EAAA,WAEAC,EAAA,OAAA,WACA,GAAAF,EAAA,CACI,GAAAA,EAAA,IAAsB,MAAA,4BACtB,GAAAE,EAAAF,EAAA,IAAoC,MAAA,sCACpC,GAAAE,EAAAF,EAAA,IAAA,CACI,MAAAG,EAAA,KAAA,OAAAD,EAAAF,GAAAE,EAAA,GAAA,EACA,GAAAC,EAAA,IAAAA,EAAA,GAA8C,MAAA,uCAAO,CACzD,CAGJ,OAAArB,EAAA,CAAc,IAAA,OAEN,MAAA,sCAAO,IAAA,SAEP,MAAA,wCAAO,QAEP,MAAA,2BAAO,CACf,EAGJ,OAAAsB,EAAAA,KAAA,MAAA,CAAA,UAAA,mBAAA,IAAAd,EAAA,SAAA,CAEQc,EAAA,KAAAC,EAAC,CAAA,YAAAb,EAAoB,MAAAhB,EAAiB,SAAAE,EAC9B,QAAAG,EAAoB,OAAAJ,EACpB,QAAAH,EAAgB,KAAAC,EAAkB,GAAAc,EAAgB,SAAA,CACxDV,EAAAQ,EAAAmB,EAAA,IAAwB,OAAC,CAAA,UAAA,QACb,SAAA,GAAQ,CAAA,EAAA,EAAW,CAAA,CAAA,EAAGrB,EAAAqB,EAAAA,IAAA,MAAA,CAAA,UAAAP,IAAA,SAAAX,CAAA,CAAA,EAAA,EAIvB,CAAA,CAAA,CAIzB,EAEAf,EAAA,aAAA,CAA8B,KAAA,QAE9B"}