{"version":3,"file":"CsvInput-c8ff3419.js","sources":["../../src/components/spinner/Spinner.tsx","../../src/components/input/CsvInput.tsx"],"sourcesContent":["import React from 'react';\nimport './assets/Spinner.scss';\n\nexport const Spinner: React.FC<SpinnerProps> = ({size, ...props}) =>\n    <div\n        className={size ? \"muncher-spinner muncher-spinner-\" + size : \"muncher-spinner\"} {...props}\n    />\n\nexport interface SpinnerProps {\n    size?: SpinnerSize\n}\nexport type SpinnerSize = 'tiny'|'small' | 'medium' | 'large';","import React from \"react\";\nimport \"./assets/FileInput.scss\";\nimport {Icon} from \"../icon/Icon\";\nimport {Spinner} from \"../spinner/Spinner\";\n\nexport const CsvInput: React.FC<CsvInputProps> = (\n    {\n        name, label, variant, size,\n        required, active, isUploading,\n        handleOnChange, warningMessage, successMessage, ...props\n    }\n) => {\n    const labelClass = 'muncher-button' +\n        (variant ? ' muncher-button--' + variant : '') +\n        (size ? ' muncher-button--' + size : '') +\n        (active ? ' muncher-button--active' : '');\n\n    const onChange = (event: any) => {\n        if (handleOnChange)\n            handleOnChange(event.currentTarget.files[0]);\n    }\n    return (\n        <div className=\"muncher-file-input--div\">\n            <div className=\"file-input-element\">\n                <label htmlFor={name} className={labelClass}>\n                    <Icon name=\"upload\"/>&nbsp;{label ? label : \"Upload CSV\"}{required ?\n                    <span className=\"required\">&nbsp;*</span> : ''}\n                    {isUploading ? <Spinner size=\"tiny\"/> : \"\"}\n                </label>\n                <input id={name} type=\"file\" className=\"muncher-file-input\" required={required}\n                       onChange={onChange}\n                       accept=\"text/csv\" {...props}/>\n                {warningMessage && warningMessage !== \"\" ? <p className=\"text-danger\">{warningMessage}</p> : \"\"}\n                {successMessage && successMessage !== \"\" ? <p className=\"text-success\">{successMessage}</p> : \"\"}\n            </div>\n\n        </div>\n\n    );\n};\n\nexport interface CsvInputProps {\n    name: string;\n    label?: string;\n    variant?: 'primary' | 'secondary' | 'tertiary';\n    size?: 'small' | 'medium' | 'large';\n    required?: boolean;\n    active?: boolean;\n    handleOnChange?: (file: File) => void;\n    isUploading?: boolean;\n    warningMessage?: string;\n    successMessage?: string;\n};\n\nCsvInput.defaultProps = {\n    size: \"medium\",\n    variant: \"secondary\",\n};\n"],"names":["Spinner","size","props","jsx","CsvInput","name","label","variant","required","active","isUploading","handleOnChange","warningMessage","successMessage","labelClass","onChange","event","jsxs","Icon"],"mappings":"qFAGO,MAAAA,EAAA,CAAA,CAAA,KAAAC,EAAA,GAAAC,CAAA,IAAAC,EAAA,IACH,MAAC,CAAA,UAAAF,EAAA,mCAAAA,EAAA,kBACiE,GAAAC,CAAuB,CACzF,sQCDG,MAAAE,EAAA,CAAA,CACH,KAAAC,EACI,MAAAC,EAAM,QAAAC,EAAO,KAAAN,EAAS,SAAAO,EACtB,OAAAC,EAAU,YAAAC,EAAQ,eAAAC,EAClB,eAAAC,EAAgB,eAAAC,EAAgB,GAAAX,CACpC,IAAA,CAEA,MAAAY,EAAA,kBAAAP,EAAA,oBAAAA,EAAA,KAAAN,EAAA,oBAAAA,EAAA,KAAAQ,EAAA,0BAAA,IAKAM,EAAAC,GAAA,CACIL,GACIA,EAAAK,EAAA,cAAA,MAAA,CAAA,CAAA,CAA2C,EAEnD,OAAAb,MAAA,MAAA,CAAA,UAAA,0BAAA,SAAAc,EAAA,KAAA,MAAA,CAAA,UAAA,qBAAA,SAAA,CAGYA,EAAA,KAAA,QAAA,CAAA,QAAAZ,EAAA,UAAAS,EAAA,SAAA,CACIX,EAAAA,IAAAe,EAAA,CAAA,KAAA,QAAA,CAAA,EAAmB,IAAEZ,GAAA,aAAuBE,EAAAL,EAAAA,IAAA,OAAA,CAAA,UAAA,WAAA,SAAA,IAAA,CAAA,EAAA,GACAO,EAAAP,EAAA,IAAAH,EAAA,CAAA,KAAA,MAAA,CAAA,EAAA,EACJ,EAAA,EAC5CG,EAAA,IACA,QAAC,CAAA,GAAAE,EAAU,KAAA,OAAW,UAAA,qBAAiB,SAAAG,EAAqB,SAAAO,EACrD,OAAA,WACO,GAAAb,CAAe,CAAA,EAAMU,GAAAA,IAAA,GAAAT,EAAAA,IAAA,IAAA,CAAA,UAAA,cAAA,SAAAS,CAAA,CAAA,EAAA,GAC0DC,GAAAA,IAAA,GAAAV,EAAAA,IAAA,IAAA,CAAA,UAAA,eAAA,SAAAU,CAAA,CAAA,EAAA,EACC,CAAA,CAAA,CAAA,CAAA,CAM9G,EAeAT,EAAA,aAAA,CAAwB,KAAA,SACd,QAAA,WAEV"}